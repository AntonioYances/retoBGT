name: CI/CD Workflow for Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-Subscription-Service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and Start Containers with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
          docker-compose ps

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          java-package: jdk
          architecture: x64
          distribution: 'temurin'

      - name: Build Subscription-Service with Maven
        working-directory: ./Subscription-Service/Subscription-Service
        run: mvn clean install

      - name: Run Subscription-Service Tests
        working-directory: ./Subscription-Service/Subscription-Service
        run: mvn test

      - name: Run Subscription-Service with Secrets
        env:
          URL: ${{ secrets.URL_DB }}
          USERNAME: ${{ secrets.USER_NAME_DB }}
          PASSWORD: ${{ secrets.PASSWORD_DB }}
        working-directory: ./Subscription-Service/Subscription-Service
        run: mvn exec:java

  build-Notification-Service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          java-package: jdk
          architecture: x64
          distribution: 'temurin'

      - name: Build Notification-Service with Maven
        working-directory: ./Notification-Service/Notification-Service
        run: mvn clean install

      - name: Run Notification-Service Tests
        working-directory: ./Notification-Service/Notification-Service
        run: mvn test

      - name: Run Notification-Service with Secrets
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTHTOKEN: ${{ secrets.TWILIO_AUTHTOKEN }}
          TWILIO_PHONENUMBER: ${{ secrets.TWILIO_PHONENUMBER }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          USERNAME: ${{ secrets.USERNAME }}
        working-directory: ./Notification-Service
        run: mvn exec:java
